{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/asadharoon/Desktop/node-shopify-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/asadharoon/Desktop/node-shopify-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/home/asadharoon/Desktop/node-shopify-app/pages/createCustomer.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation customerCreate($input: CustomerInput!) {\\n    customerCreate(input: $input) {\\n      customer {\\n        id\\n      }\\n      userErrors {\\n        field\\n        message\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { Checkbox, Form, FormLayout, Layout, Page, TextField } from \"@shopify/polaris\";\nimport gql from \"graphql-tag\";\nimport { Form as FormFormik, Formik } from \"formik\";\nimport React from \"react\";\nimport { createCustSchema } from \"../validations/createCustomerValidation\";\nvar createCust = gql(_templateObject());\n\nvar CreateCustomer = function CreateCustomer() {\n  _s();\n\n  var _useMutation = useMutation(createCust),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createCustomer = _useMutation2[0],\n      data = _useMutation2[1].data;\n\n  return /*#__PURE__*/_jsxDEV(Page, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        validationSchema: createCustSchema,\n        initialValues: {\n          email: \"\"\n        },\n        children: function children(_ref) {\n          var values = _ref.values,\n              handleChange = _ref.handleChange,\n              errors = _ref.errors;\n          return /*#__PURE__*/_jsxDEV(FormFormik, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              value: values.email,\n              onChange: handleChange(\"email\"),\n              label: \"Email\",\n              type: \"email\",\n              helpText: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 29\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CreateCustomer, \"Q4MXo02f4I5+SBDhsT4E6BSbSw8=\", false, function () {\n  return [useMutation];\n});\n\n_c = CreateCustomer;\nexport default CreateCustomer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCustomer\");","map":{"version":3,"sources":["/home/asadharoon/Desktop/node-shopify-app/pages/createCustomer.js"],"names":["useMutation","Checkbox","Form","FormLayout","Layout","Page","TextField","gql","FormFormik","Formik","React","createCustSchema","createCust","CreateCustomer","createCustomer","data","email","values","handleChange","errors"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,WAAT,QAA4B,qBAA5B;AACA,SACEC,QADF,EAEEC,IAFF,EAGEC,UAHF,EAIEC,MAJF,EAKEC,IALF,EAMEC,SANF,QAOO,kBAPP;AAQA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASL,IAAI,IAAIM,UAAjB,EAA6BC,MAA7B,QAA2C,QAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,yCAAjC;AACA,IAAMC,UAAU,GAAGL,GAAH,mBAAhB;;AAaA,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA;;AAAA,qBACQb,WAAW,CAACY,UAAD,CADnB;AAAA;AAAA,MACpBE,cADoB;AAAA,MACFC,IADE,oBACFA,IADE;;AAG3B,sBACE,QAAC,IAAD;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,gBAAgB,EAAEJ,gBADpB;AAEE,QAAA,aAAa,EAAE;AAAEK,UAAAA,KAAK,EAAE;AAAT,SAFjB;AAAA,kBAIG,wBAAsC;AAAA,cAAnCC,MAAmC,QAAnCA,MAAmC;AAAA,cAA3BC,YAA2B,QAA3BA,YAA2B;AAAA,cAAbC,MAAa,QAAbA,MAAa;AACrC,8BACE,QAAC,UAAD;AAAA,oCACE,QAAC,SAAD;AACE,cAAA,KAAK,EAAEF,MAAM,CAACD,KADhB;AAEE,cAAA,QAAQ,EAAEE,YAAY,CAAC,OAAD,CAFxB;AAGE,cAAA,KAAK,EAAC,OAHR;AAIE,cAAA,IAAI,EAAC,OAJP;AAKE,cAAA,QAAQ,eAAE;AAAA,0BAAOC,MAAM,CAACH;AAAd;AAAA;AAAA;AAAA;AAAA;AALZ;AAAA;AAAA;AAAA;AAAA,qBADF,eASE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBATF;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF;AAaD;AAlBH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AA0BD,CA7BD;;GAAMH,c;UAC+Bb,W;;;KAD/Ba,c;AA+BN,eAAeA,cAAf","sourcesContent":["import { useMutation } from \"@apollo/react-hooks\";\nimport {\n  Checkbox,\n  Form,\n  FormLayout,\n  Layout,\n  Page,\n  TextField,\n} from \"@shopify/polaris\";\nimport gql from \"graphql-tag\";\nimport { Form as FormFormik, Formik } from \"formik\";\nimport React from \"react\";\nimport { createCustSchema } from \"../validations/createCustomerValidation\";\nconst createCust = gql`\n  mutation customerCreate($input: CustomerInput!) {\n    customerCreate(input: $input) {\n      customer {\n        id\n      }\n      userErrors {\n        field\n        message\n      }\n    }\n  }\n`;\nconst CreateCustomer = () => {\n  const [createCustomer, { data }] = useMutation(createCust);\n\n  return (\n    <Page>\n      <Layout>\n        <Formik\n          validationSchema={createCustSchema}\n          initialValues={{ email: \"\" }}\n        >\n          {({ values, handleChange, errors }) => {\n            return (\n              <FormFormik>\n                <TextField\n                  value={values.email}\n                  onChange={handleChange(\"email\")}\n                  label=\"Email\"\n                  type=\"email\"\n                  helpText={<span>{errors.email}</span>}\n                />\n\n                <Button>Submit</Button>\n              </FormFormik>\n            );\n          }}\n        </Formik>\n      </Layout>\n    </Page>\n  );\n};\n\nexport default CreateCustomer;\n"]},"metadata":{},"sourceType":"module"}