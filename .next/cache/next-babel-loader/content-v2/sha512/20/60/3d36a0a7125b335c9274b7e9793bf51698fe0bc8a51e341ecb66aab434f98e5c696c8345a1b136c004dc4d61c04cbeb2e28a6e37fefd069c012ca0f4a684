{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/asadharoon/Desktop/node-shopify-app/components/ClientRouter.js\";\nimport { withRouter, NextRouter as ReactRouterLink } from \"next/router\";\nimport { ClientRouter as AppBridgeClientRouter, useRoutePropagation } from \"@shopify/app-bridge-react\";\n\nfunction ClientRouter(props) {\n  const {\n    router\n  } = props;\n  console.log(\"router in props clientrouter is\", props);\n  return /*#__PURE__*/_jsxDEV(AppBridgeClientRouter, {\n    history: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n}\n\nconst IS_EXTERNAL_LINK_REGEX = /^(?:[a-z][a-z\\d+.-]*:|\\/\\/)/;\nexport default withRouter(ClientRouter); // import React from \"react\";\n// import { useEffect, useContext } from \"react\";\n// import Router, { useRouter } from \"next/router\";\n// import { Context as AppBridgeContext } from \"@shopify/app-bridge-react\";\n// import { Redirect } from \"@shopify/app-bridge/actions\";\n// import { RoutePropagator as ShopifyRoutePropagator } from \"@shopify/app-bridge-react\";\n// const RoutePropagator = () => {\n//   const router = useRouter();\n//   const { route } = router;\n//   const appBridge = React.useContext(AppBridgeContext);\n//   // Subscribe to appBridge changes - captures appBridge urls\n//   // and sends them to Next.js router. Use useEffect hook to\n//   // load once when component mounted\n//   useEffect(() => {\n//     appBridge.subscribe(Redirect.ActionType.APP, ({ path }) => {\n//       console.log(\"patg is\", path);\n//       router.push(path);\n//       console.log(\"route is\", route);\n//     });\n//   }, [route]);\n//   return appBridge && route ? (\n//     <ShopifyRoutePropagator location={route} app={appBridge} />\n//   ) : null;\n// };\n// export default RoutePropagator;","map":{"version":3,"sources":["/home/asadharoon/Desktop/node-shopify-app/components/ClientRouter.js"],"names":["withRouter","NextRouter","ReactRouterLink","ClientRouter","AppBridgeClientRouter","useRoutePropagation","props","router","console","log","IS_EXTERNAL_LINK_REGEX"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,UAAU,IAAIC,eAAnC,QAA0D,aAA1D;AACA,SACEC,YAAY,IAAIC,qBADlB,EAEEC,mBAFF,QAGO,2BAHP;;AAKA,SAASF,YAAT,CAAsBG,KAAtB,EAA6B;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CH,KAA/C;AACA,sBAAO,QAAC,qBAAD;AAAuB,IAAA,OAAO,EAAEC;AAAhC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,MAAMG,sBAAsB,GAAG,6BAA/B;AAEA,eAAeV,UAAU,CAACG,YAAD,CAAzB,C,CACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["import { withRouter, NextRouter as ReactRouterLink } from \"next/router\";\nimport {\n  ClientRouter as AppBridgeClientRouter,\n  useRoutePropagation,\n} from \"@shopify/app-bridge-react\";\n\nfunction ClientRouter(props) {\n  const { router } = props;\n  console.log(\"router in props clientrouter is\", props);\n  return <AppBridgeClientRouter history={router} />;\n}\n\nconst IS_EXTERNAL_LINK_REGEX = /^(?:[a-z][a-z\\d+.-]*:|\\/\\/)/;\n\nexport default withRouter(ClientRouter);\n// import React from \"react\";\n// import { useEffect, useContext } from \"react\";\n// import Router, { useRouter } from \"next/router\";\n// import { Context as AppBridgeContext } from \"@shopify/app-bridge-react\";\n// import { Redirect } from \"@shopify/app-bridge/actions\";\n// import { RoutePropagator as ShopifyRoutePropagator } from \"@shopify/app-bridge-react\";\n\n// const RoutePropagator = () => {\n//   const router = useRouter();\n//   const { route } = router;\n//   const appBridge = React.useContext(AppBridgeContext);\n\n//   // Subscribe to appBridge changes - captures appBridge urls\n//   // and sends them to Next.js router. Use useEffect hook to\n//   // load once when component mounted\n//   useEffect(() => {\n//     appBridge.subscribe(Redirect.ActionType.APP, ({ path }) => {\n//       console.log(\"patg is\", path);\n//       router.push(path);\n//       console.log(\"route is\", route);\n//     });\n//   }, [route]);\n\n//   return appBridge && route ? (\n//     <ShopifyRoutePropagator location={route} app={appBridge} />\n//   ) : null;\n// };\n\n// export default RoutePropagator;\n"]},"metadata":{},"sourceType":"module"}